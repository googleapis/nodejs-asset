// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import * as gax from 'google-gax';
import {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
} from 'google-gax';
import * as path from 'path';

import {Transform} from 'stream';
import {RequestType} from 'google-gax/build/src/apitypes';
import * as protos from '../../protos/protos';
import * as gapicConfig from './asset_service_client_config.json';
import {operationsProtos} from 'google-gax';
const version = require('../../../package.json').version;

/**
 *  Asset service definition.
 * @class
 * @memberof v1
 */
export class AssetServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  assetServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of AssetServiceClient.
   *
   * @param {object} [options] - The configuration object. See the subsequent
   *   parameters for more details.
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   */

  constructor(opts?: ClientOptions) {
    // Ensure that options include the service address and port.
    const staticMembers = this.constructor as typeof AssetServiceClient;
    const servicePath =
      opts && opts.servicePath
        ? opts.servicePath
        : opts && opts.apiEndpoint
        ? opts.apiEndpoint
        : staticMembers.servicePath;
    const port = opts && opts.port ? opts.port : staticMembers.port;

    if (!opts) {
      opts = {servicePath, port};
    }
    opts.servicePath = opts.servicePath || servicePath;
    opts.port = opts.port || port;

    // users can override the config from client side, like retry codes name.
    // The detailed structure of the clientConfig can be found here: https://github.com/googleapis/gax-nodejs/blob/master/src/gax.ts#L546
    // The way to override client config for Showcase API:
    //
    // const customConfig = {"interfaces": {"google.showcase.v1beta1.Echo": {"methods": {"Echo": {"retry_codes_name": "idempotent", "retry_params_name": "default"}}}}}
    // const showcaseClient = new showcaseClient({ projectId, customConfig });
    opts.clientConfig = opts.clientConfig || {};

    // If we're running in browser, it's OK to omit `fallback` since
    // google-gax has `browser` field in its `package.json`.
    // For Electron (which does not respect `browser` field),
    // pass `{fallback: true}` to the AssetServiceClient constructor.
    this._gaxModule = opts.fallback ? gax.fallback : gax;

    // Create a `gaxGrpc` object, with any grpc-specific options
    // sent to the client.
    opts.scopes = (this.constructor as typeof AssetServiceClient).scopes;
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    // For Node.js, pass the path to JSON proto file.
    // For browsers, pass the JSON content.

    const nodejsProtoPath = path.join(
      __dirname,
      '..',
      '..',
      'protos',
      'protos.json'
    );
    this._protos = this._gaxGrpc.loadProto(
      opts.fallback
        ? // eslint-disable-next-line @typescript-eslint/no-var-requires
          require('../../protos/protos.json')
        : nodejsProtoPath
    );

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      folderFeedPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/feeds/{feed}'
      ),
      organizationFeedPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/feeds/{feed}'
      ),
      projectFeedPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/feeds/{feed}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      searchAllResources: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'results'
      ),
      searchAllIamPolicies: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'results'
      ),
    };

    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const protoFilesRoot = opts.fallback
      ? this._gaxModule.protobuf.Root.fromJSON(
          // eslint-disable-next-line @typescript-eslint/no-var-requires
          require('../../protos/protos.json')
        )
      : this._gaxModule.protobuf.loadSync(nodejsProtoPath);

    this.operationsClient = this._gaxModule
      .lro({
        auth: this.auth,
        grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
      })
      .operationsClient(opts);
    const exportAssetsResponse = protoFilesRoot.lookup(
      '.google.cloud.asset.v1.ExportAssetsResponse'
    ) as gax.protobuf.Type;
    const exportAssetsMetadata = protoFilesRoot.lookup(
      '.google.cloud.asset.v1.ExportAssetsRequest'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      exportAssets: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        exportAssetsResponse.decode.bind(exportAssetsResponse),
        exportAssetsMetadata.decode.bind(exportAssetsMetadata)
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.asset.v1.AssetService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.assetServiceStub) {
      return this.assetServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.asset.v1.AssetService.
    this.assetServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.asset.v1.AssetService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.asset.v1.AssetService,
      this._opts
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const assetServiceStubMethods = [
      'exportAssets',
      'batchGetAssetsHistory',
      'createFeed',
      'getFeed',
      'listFeeds',
      'updateFeed',
      'deleteFeed',
      'searchAllResources',
      'searchAllIamPolicies',
    ];
    for (const methodName of assetServiceStubMethods) {
      const callPromise = this.assetServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        this.descriptors.page[methodName] ||
          this.descriptors.stream[methodName] ||
          this.descriptors.longrunning[methodName]
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.assetServiceStub;
  }

  /**
   * The DNS address for this API service.
   */
  static get servicePath() {
    return 'cloudasset.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   */
  static get apiEndpoint() {
    return 'cloudasset.googleapis.com';
  }

  /**
   * The port for this API service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @param {function(Error, string)} callback - the callback to
   *   be called with the current project Id.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  batchGetAssetsHistory(
    request: protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.asset.v1.IBatchGetAssetsHistoryResponse,
      protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest | undefined,
      {} | undefined
    ]
  >;
  batchGetAssetsHistory(
    request: protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.asset.v1.IBatchGetAssetsHistoryResponse,
      | protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  batchGetAssetsHistory(
    request: protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest,
    callback: Callback<
      protos.google.cloud.asset.v1.IBatchGetAssetsHistoryResponse,
      | protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Batch gets the update history of assets that overlap a time window.
   * For IAM_POLICY content, this API outputs history when the asset and its
   * attached IAM POLICY both exist. This can create gaps in the output history.
   * Otherwise, this API outputs history with asset in both non-delete or
   * deleted status.
   * If a specified asset does not exist, this API returns an INVALID_ARGUMENT
   * error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The relative name of the root asset. It can only be an
   *   organization number (such as "organizations/123"), a project ID (such as
   *   "projects/my-project-id")", or a project number (such as "projects/12345").
   * @param {string[]} request.assetNames
   *   A list of the full names of the assets.
   *   See: https://cloud.google.com/asset-inventory/docs/resource-name-format
   *   Example:
   *
   *   `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
   *
   *   The request becomes a no-op if the asset name list is empty, and the max
   *   size of the asset name list is 100 in one request.
   * @param {google.cloud.asset.v1.ContentType} [request.contentType]
   *   Optional. The content type.
   * @param {google.cloud.asset.v1.TimeWindow} [request.readTimeWindow]
   *   Optional. The time window for the asset history. Both start_time and
   *   end_time are optional and if set, it must be after the current time minus
   *   35 days. If end_time is not set, it is default to current timestamp.
   *   If start_time is not set, the snapshot of the assets at end_time will be
   *   returned. The returned results contain all temporal assets whose time
   *   window overlap with read_time_window.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BatchGetAssetsHistoryResponse]{@link google.cloud.asset.v1.BatchGetAssetsHistoryResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  batchGetAssetsHistory(
    request: protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.asset.v1.IBatchGetAssetsHistoryResponse,
          | protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.asset.v1.IBatchGetAssetsHistoryResponse,
      | protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.asset.v1.IBatchGetAssetsHistoryResponse,
      protos.google.cloud.asset.v1.IBatchGetAssetsHistoryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.batchGetAssetsHistory(request, options, callback);
  }
  createFeed(
    request: protos.google.cloud.asset.v1.ICreateFeedRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.ICreateFeedRequest | undefined,
      {} | undefined
    ]
  >;
  createFeed(
    request: protos.google.cloud.asset.v1.ICreateFeedRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.ICreateFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createFeed(
    request: protos.google.cloud.asset.v1.ICreateFeedRequest,
    callback: Callback<
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.ICreateFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Creates a feed in a parent project/folder/organization to listen to its
   * asset updates.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the project/folder/organization where this feed
   *   should be created in. It can only be an organization number (such as
   *   "organizations/123"), a folder number (such as "folders/123"), a project ID
   *   (such as "projects/my-project-id")", or a project number (such as
   *   "projects/12345").
   * @param {string} request.feedId
   *   Required. This is the client-assigned asset feed identifier and it needs to
   *   be unique under a specific parent project/folder/organization.
   * @param {google.cloud.asset.v1.Feed} request.feed
   *   Required. The feed details. The field `name` must be empty and it will be
   *   generated in the format of: projects/project_number/feeds/feed_id
   *   folders/folder_number/feeds/feed_id
   *   organizations/organization_number/feeds/feed_id
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Feed]{@link google.cloud.asset.v1.Feed}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createFeed(
    request: protos.google.cloud.asset.v1.ICreateFeedRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.asset.v1.IFeed,
          protos.google.cloud.asset.v1.ICreateFeedRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.ICreateFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.ICreateFeedRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createFeed(request, options, callback);
  }
  getFeed(
    request: protos.google.cloud.asset.v1.IGetFeedRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IGetFeedRequest | undefined,
      {} | undefined
    ]
  >;
  getFeed(
    request: protos.google.cloud.asset.v1.IGetFeedRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IGetFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getFeed(
    request: protos.google.cloud.asset.v1.IGetFeedRequest,
    callback: Callback<
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IGetFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Gets details about an asset feed.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the Feed and it must be in the format of:
   *   projects/project_number/feeds/feed_id
   *   folders/folder_number/feeds/feed_id
   *   organizations/organization_number/feeds/feed_id
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Feed]{@link google.cloud.asset.v1.Feed}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getFeed(
    request: protos.google.cloud.asset.v1.IGetFeedRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.asset.v1.IFeed,
          protos.google.cloud.asset.v1.IGetFeedRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IGetFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IGetFeedRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getFeed(request, options, callback);
  }
  listFeeds(
    request: protos.google.cloud.asset.v1.IListFeedsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.asset.v1.IListFeedsResponse,
      protos.google.cloud.asset.v1.IListFeedsRequest | undefined,
      {} | undefined
    ]
  >;
  listFeeds(
    request: protos.google.cloud.asset.v1.IListFeedsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.asset.v1.IListFeedsResponse,
      protos.google.cloud.asset.v1.IListFeedsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  listFeeds(
    request: protos.google.cloud.asset.v1.IListFeedsRequest,
    callback: Callback<
      protos.google.cloud.asset.v1.IListFeedsResponse,
      protos.google.cloud.asset.v1.IListFeedsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Lists all asset feeds in a parent project/folder/organization.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent project/folder/organization whose feeds are to be
   *   listed. It can only be using project/folder/organization number (such as
   *   "folders/12345")", or a project ID (such as "projects/my-project-id").
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ListFeedsResponse]{@link google.cloud.asset.v1.ListFeedsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listFeeds(
    request: protos.google.cloud.asset.v1.IListFeedsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.asset.v1.IListFeedsResponse,
          protos.google.cloud.asset.v1.IListFeedsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.asset.v1.IListFeedsResponse,
      protos.google.cloud.asset.v1.IListFeedsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.asset.v1.IListFeedsResponse,
      protos.google.cloud.asset.v1.IListFeedsRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listFeeds(request, options, callback);
  }
  updateFeed(
    request: protos.google.cloud.asset.v1.IUpdateFeedRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IUpdateFeedRequest | undefined,
      {} | undefined
    ]
  >;
  updateFeed(
    request: protos.google.cloud.asset.v1.IUpdateFeedRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IUpdateFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateFeed(
    request: protos.google.cloud.asset.v1.IUpdateFeedRequest,
    callback: Callback<
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IUpdateFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates an asset feed configuration.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.asset.v1.Feed} request.feed
   *   Required. The new values of feed details. It must match an existing feed
   *   and the field `name` must be in the format of:
   *   projects/project_number/feeds/feed_id or
   *   folders/folder_number/feeds/feed_id or
   *   organizations/organization_number/feeds/feed_id.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Only updates the `feed` fields indicated by this mask.
   *   The field mask must not be empty, and it must not contain fields that
   *   are immutable or only set by the server.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Feed]{@link google.cloud.asset.v1.Feed}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateFeed(
    request: protos.google.cloud.asset.v1.IUpdateFeedRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.cloud.asset.v1.IFeed,
          protos.google.cloud.asset.v1.IUpdateFeedRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IUpdateFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.asset.v1.IFeed,
      protos.google.cloud.asset.v1.IUpdateFeedRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'feed.name': request.feed!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateFeed(request, options, callback);
  }
  deleteFeed(
    request: protos.google.cloud.asset.v1.IDeleteFeedRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.asset.v1.IDeleteFeedRequest | undefined,
      {} | undefined
    ]
  >;
  deleteFeed(
    request: protos.google.cloud.asset.v1.IDeleteFeedRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.asset.v1.IDeleteFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteFeed(
    request: protos.google.cloud.asset.v1.IDeleteFeedRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.asset.v1.IDeleteFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Deletes an asset feed.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the feed and it must be in the format of:
   *   projects/project_number/feeds/feed_id
   *   folders/folder_number/feeds/feed_id
   *   organizations/organization_number/feeds/feed_id
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteFeed(
    request: protos.google.cloud.asset.v1.IDeleteFeedRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.asset.v1.IDeleteFeedRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.asset.v1.IDeleteFeedRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.asset.v1.IDeleteFeedRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteFeed(request, options, callback);
  }

  exportAssets(
    request: protos.google.cloud.asset.v1.IExportAssetsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.asset.v1.IExportAssetsResponse,
        protos.google.cloud.asset.v1.IExportAssetsRequest
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  exportAssets(
    request: protos.google.cloud.asset.v1.IExportAssetsRequest,
    options: gax.CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.asset.v1.IExportAssetsResponse,
        protos.google.cloud.asset.v1.IExportAssetsRequest
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  exportAssets(
    request: protos.google.cloud.asset.v1.IExportAssetsRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.asset.v1.IExportAssetsResponse,
        protos.google.cloud.asset.v1.IExportAssetsRequest
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Exports assets with time and resource types to a given Cloud Storage
   * location/BigQuery table. For Cloud Storage location destinations, the
   * output format is newline-delimited JSON. Each line represents a
   * {@link google.cloud.asset.v1.Asset|google.cloud.asset.v1.Asset} in the JSON
   * format; for BigQuery table destinations, the output table stores the fields
   * in asset proto as columns. This API implements the
   * {@link google.longrunning.Operation|google.longrunning.Operation} API , which
   * allows you to keep track of the export. We recommend intervals of at least
   * 2 seconds with exponential retry to poll the export operation result. For
   * regular-size resource parent, the export operation usually finishes within
   * 5 minutes.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The relative name of the root asset. This can only be an
   *   organization number (such as "organizations/123"), a project ID (such as
   *   "projects/my-project-id"), or a project number (such as "projects/12345"),
   *   or a folder number (such as "folders/123").
   * @param {google.protobuf.Timestamp} request.readTime
   *   Timestamp to take an asset snapshot. This can only be set to a timestamp
   *   between the current time and the current time minus 35 days (inclusive).
   *   If not specified, the current time will be used. Due to delays in resource
   *   data collection and indexing, there is a volatile window during which
   *   running the same query may get different results.
   * @param {string[]} request.assetTypes
   *   A list of asset types of which to take a snapshot for. Example:
   *   "compute.googleapis.com/Disk". If specified, only matching assets will be
   *   returned. See [Introduction to Cloud Asset
   *   Inventory](https://cloud.google.com/asset-inventory/docs/overview)
   *   for all supported asset types.
   * @param {google.cloud.asset.v1.ContentType} request.contentType
   *   Asset content type. If not specified, no content but the asset name will be
   *   returned.
   * @param {google.cloud.asset.v1.OutputConfig} request.outputConfig
   *   Required. Output configuration indicating where the results will be output
   *   to.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Operation]{@link google.longrunning.Operation}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  exportAssets(
    request: protos.google.cloud.asset.v1.IExportAssetsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.asset.v1.IExportAssetsResponse,
            protos.google.cloud.asset.v1.IExportAssetsRequest
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.asset.v1.IExportAssetsResponse,
        protos.google.cloud.asset.v1.IExportAssetsRequest
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.asset.v1.IExportAssetsResponse,
        protos.google.cloud.asset.v1.IExportAssetsRequest
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.exportAssets(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by the exportAssets() method.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *
   * @example:
   *   const decodedOperation = await checkExportAssetsProgress(name);
   *   console.log(decodedOperation.result);
   *   console.log(decodedOperation.done);
   *   console.log(decodedOperation.metadata);
   *
   */
  async checkExportAssetsProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.asset.v1.ExportAssetsResponse,
      protos.google.cloud.asset.v1.ExportAssetsRequest
    >
  > {
    const request = new operationsProtos.google.longrunning.GetOperationRequest(
      {name}
    );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new gax.Operation(
      operation,
      this.descriptors.longrunning.exportAssets,
      gax.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.asset.v1.ExportAssetsResponse,
      protos.google.cloud.asset.v1.ExportAssetsRequest
    >;
  }
  searchAllResources(
    request: protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.asset.v1.IResourceSearchResult[],
      protos.google.cloud.asset.v1.ISearchAllResourcesRequest | null,
      protos.google.cloud.asset.v1.ISearchAllResourcesResponse
    ]
  >;
  searchAllResources(
    request: protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
      | protos.google.cloud.asset.v1.ISearchAllResourcesResponse
      | null
      | undefined,
      protos.google.cloud.asset.v1.IResourceSearchResult
    >
  ): void;
  searchAllResources(
    request: protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
    callback: PaginationCallback<
      protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
      | protos.google.cloud.asset.v1.ISearchAllResourcesResponse
      | null
      | undefined,
      protos.google.cloud.asset.v1.IResourceSearchResult
    >
  ): void;
  /**
   * Searches all the resources within the given accessible scope (e.g., a
   * project, a folder or an organization). Callers should have
   * cloud.assets.SearchAllResources permission upon the requested scope,
   * otherwise the request will be rejected.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.scope
   *   Required. A scope can be a project, a folder or an organization. The search
   *   is limited to the resources within the `scope`.
   *
   *   The allowed values are:
   *
   *   * projects/{PROJECT_ID}
   *   * projects/{PROJECT_NUMBER}
   *   * folders/{FOLDER_NUMBER}
   *   * organizations/{ORGANIZATION_NUMBER}
   * @param {string} [request.query]
   *   Optional. The query statement. An empty query can be specified to search
   *   all the resources of certain `asset_types` within the given `scope`.
   *
   *   Examples:
   *
   *   * `name : "Important"` to find Cloud resources whose name contains
   *     "Important" as a word.
   *   * `displayName : "Impor*"` to find Cloud resources whose display name
   *     contains "Impor" as a word prefix.
   *   * `description : "*por*"` to find Cloud resources whose description
   *     contains "por" as a substring.
   *   * `location : "us-west*"` to find Cloud resources whose location is
   *     prefixed with "us-west".
   *   * `labels : "prod"` to find Cloud resources whose labels contain "prod" as
   *     a key or value.
   *   * `labels.env : "prod"` to find Cloud resources which have a label "env"
   *     and its value is "prod".
   *   * `labels.env : *` to find Cloud resources which have a label "env".
   *   * `"Important"` to find Cloud resources which contain "Important" as a word
   *     in any of the searchable fields.
   *   * `"Impor*"` to find Cloud resources which contain "Impor" as a word prefix
   *     in any of the searchable fields.
   *   * `"*por*"` to find Cloud resources which contain "por" as a substring in
   *     any of the searchable fields.
   *   * `("Important" AND location : ("us-west1" OR "global"))` to find Cloud
   *     resources which contain "Important" as a word in any of the searchable
   *     fields and are also located in the "us-west1" region or the "global"
   *     location.
   *
   *   See [how to construct a
   *   query](https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query)
   *   for more details.
   * @param {string[]} [request.assetTypes]
   *   Optional. A list of asset types that this request searches for. If empty,
   *   it will search all the [searchable asset
   *   types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types).
   * @param {number} [request.pageSize]
   *   Optional. The page size for search result pagination. Page size is capped
   *   at 500 even if a larger value is given. If set to zero, server will pick an
   *   appropriate default. Returned results may be fewer than requested. When
   *   this happens, there could be more results as long as `next_page_token` is
   *   returned.
   * @param {string} [request.pageToken]
   *   Optional. If present, then retrieve the next batch of results from the
   *   preceding call to this method. `page_token` must be the value of
   *   `next_page_token` from the previous response. The values of all other
   *   method parameters, must be identical to those in the previous call.
   * @param {string} [request.orderBy]
   *   Optional. A comma separated list of fields specifying the sorting order of
   *   the results. The default order is ascending. Add " DESC" after the field
   *   name to indicate descending order. Redundant space characters are ignored.
   *   Example: "location DESC, name". See [supported resource metadata
   *   fields](https://cloud.google.com/asset-inventory/docs/searching-resources#query_on_resource_metadata_fields)
   *   for more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [ResourceSearchResult]{@link google.cloud.asset.v1.ResourceSearchResult}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [ResourceSearchResult]{@link google.cloud.asset.v1.ResourceSearchResult} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [SearchAllResourcesRequest]{@link google.cloud.asset.v1.SearchAllResourcesRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [SearchAllResourcesResponse]{@link google.cloud.asset.v1.SearchAllResourcesResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  searchAllResources(
    request: protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
          | protos.google.cloud.asset.v1.ISearchAllResourcesResponse
          | null
          | undefined,
          protos.google.cloud.asset.v1.IResourceSearchResult
        >,
    callback?: PaginationCallback<
      protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
      | protos.google.cloud.asset.v1.ISearchAllResourcesResponse
      | null
      | undefined,
      protos.google.cloud.asset.v1.IResourceSearchResult
    >
  ): Promise<
    [
      protos.google.cloud.asset.v1.IResourceSearchResult[],
      protos.google.cloud.asset.v1.ISearchAllResourcesRequest | null,
      protos.google.cloud.asset.v1.ISearchAllResourcesResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      scope: request.scope || '',
    });
    this.initialize();
    return this.innerApiCalls.searchAllResources(request, options, callback);
  }

  /**
   * Equivalent to {@link searchAllResources}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link searchAllResources} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.scope
   *   Required. A scope can be a project, a folder or an organization. The search
   *   is limited to the resources within the `scope`.
   *
   *   The allowed values are:
   *
   *   * projects/{PROJECT_ID}
   *   * projects/{PROJECT_NUMBER}
   *   * folders/{FOLDER_NUMBER}
   *   * organizations/{ORGANIZATION_NUMBER}
   * @param {string} [request.query]
   *   Optional. The query statement. An empty query can be specified to search
   *   all the resources of certain `asset_types` within the given `scope`.
   *
   *   Examples:
   *
   *   * `name : "Important"` to find Cloud resources whose name contains
   *     "Important" as a word.
   *   * `displayName : "Impor*"` to find Cloud resources whose display name
   *     contains "Impor" as a word prefix.
   *   * `description : "*por*"` to find Cloud resources whose description
   *     contains "por" as a substring.
   *   * `location : "us-west*"` to find Cloud resources whose location is
   *     prefixed with "us-west".
   *   * `labels : "prod"` to find Cloud resources whose labels contain "prod" as
   *     a key or value.
   *   * `labels.env : "prod"` to find Cloud resources which have a label "env"
   *     and its value is "prod".
   *   * `labels.env : *` to find Cloud resources which have a label "env".
   *   * `"Important"` to find Cloud resources which contain "Important" as a word
   *     in any of the searchable fields.
   *   * `"Impor*"` to find Cloud resources which contain "Impor" as a word prefix
   *     in any of the searchable fields.
   *   * `"*por*"` to find Cloud resources which contain "por" as a substring in
   *     any of the searchable fields.
   *   * `("Important" AND location : ("us-west1" OR "global"))` to find Cloud
   *     resources which contain "Important" as a word in any of the searchable
   *     fields and are also located in the "us-west1" region or the "global"
   *     location.
   *
   *   See [how to construct a
   *   query](https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query)
   *   for more details.
   * @param {string[]} [request.assetTypes]
   *   Optional. A list of asset types that this request searches for. If empty,
   *   it will search all the [searchable asset
   *   types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types).
   * @param {number} [request.pageSize]
   *   Optional. The page size for search result pagination. Page size is capped
   *   at 500 even if a larger value is given. If set to zero, server will pick an
   *   appropriate default. Returned results may be fewer than requested. When
   *   this happens, there could be more results as long as `next_page_token` is
   *   returned.
   * @param {string} [request.pageToken]
   *   Optional. If present, then retrieve the next batch of results from the
   *   preceding call to this method. `page_token` must be the value of
   *   `next_page_token` from the previous response. The values of all other
   *   method parameters, must be identical to those in the previous call.
   * @param {string} [request.orderBy]
   *   Optional. A comma separated list of fields specifying the sorting order of
   *   the results. The default order is ascending. Add " DESC" after the field
   *   name to indicate descending order. Redundant space characters are ignored.
   *   Example: "location DESC, name". See [supported resource metadata
   *   fields](https://cloud.google.com/asset-inventory/docs/searching-resources#query_on_resource_metadata_fields)
   *   for more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [ResourceSearchResult]{@link google.cloud.asset.v1.ResourceSearchResult} on 'data' event.
   */
  searchAllResourcesStream(
    request?: protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      scope: request.scope || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.searchAllResources.createStream(
      this.innerApiCalls.searchAllResources as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link searchAllResources}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.scope
   *   Required. A scope can be a project, a folder or an organization. The search
   *   is limited to the resources within the `scope`.
   *
   *   The allowed values are:
   *
   *   * projects/{PROJECT_ID}
   *   * projects/{PROJECT_NUMBER}
   *   * folders/{FOLDER_NUMBER}
   *   * organizations/{ORGANIZATION_NUMBER}
   * @param {string} [request.query]
   *   Optional. The query statement. An empty query can be specified to search
   *   all the resources of certain `asset_types` within the given `scope`.
   *
   *   Examples:
   *
   *   * `name : "Important"` to find Cloud resources whose name contains
   *     "Important" as a word.
   *   * `displayName : "Impor*"` to find Cloud resources whose display name
   *     contains "Impor" as a word prefix.
   *   * `description : "*por*"` to find Cloud resources whose description
   *     contains "por" as a substring.
   *   * `location : "us-west*"` to find Cloud resources whose location is
   *     prefixed with "us-west".
   *   * `labels : "prod"` to find Cloud resources whose labels contain "prod" as
   *     a key or value.
   *   * `labels.env : "prod"` to find Cloud resources which have a label "env"
   *     and its value is "prod".
   *   * `labels.env : *` to find Cloud resources which have a label "env".
   *   * `"Important"` to find Cloud resources which contain "Important" as a word
   *     in any of the searchable fields.
   *   * `"Impor*"` to find Cloud resources which contain "Impor" as a word prefix
   *     in any of the searchable fields.
   *   * `"*por*"` to find Cloud resources which contain "por" as a substring in
   *     any of the searchable fields.
   *   * `("Important" AND location : ("us-west1" OR "global"))` to find Cloud
   *     resources which contain "Important" as a word in any of the searchable
   *     fields and are also located in the "us-west1" region or the "global"
   *     location.
   *
   *   See [how to construct a
   *   query](https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query)
   *   for more details.
   * @param {string[]} [request.assetTypes]
   *   Optional. A list of asset types that this request searches for. If empty,
   *   it will search all the [searchable asset
   *   types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types).
   * @param {number} [request.pageSize]
   *   Optional. The page size for search result pagination. Page size is capped
   *   at 500 even if a larger value is given. If set to zero, server will pick an
   *   appropriate default. Returned results may be fewer than requested. When
   *   this happens, there could be more results as long as `next_page_token` is
   *   returned.
   * @param {string} [request.pageToken]
   *   Optional. If present, then retrieve the next batch of results from the
   *   preceding call to this method. `page_token` must be the value of
   *   `next_page_token` from the previous response. The values of all other
   *   method parameters, must be identical to those in the previous call.
   * @param {string} [request.orderBy]
   *   Optional. A comma separated list of fields specifying the sorting order of
   *   the results. The default order is ascending. Add " DESC" after the field
   *   name to indicate descending order. Redundant space characters are ignored.
   *   Example: "location DESC, name". See [supported resource metadata
   *   fields](https://cloud.google.com/asset-inventory/docs/searching-resources#query_on_resource_metadata_fields)
   *   for more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  searchAllResourcesAsync(
    request?: protos.google.cloud.asset.v1.ISearchAllResourcesRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.cloud.asset.v1.IResourceSearchResult> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      scope: request.scope || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.searchAllResources.asyncIterate(
      this.innerApiCalls['searchAllResources'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.asset.v1.IResourceSearchResult>;
  }
  searchAllIamPolicies(
    request: protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.cloud.asset.v1.IIamPolicySearchResult[],
      protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest | null,
      protos.google.cloud.asset.v1.ISearchAllIamPoliciesResponse
    ]
  >;
  searchAllIamPolicies(
    request: protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
      | protos.google.cloud.asset.v1.ISearchAllIamPoliciesResponse
      | null
      | undefined,
      protos.google.cloud.asset.v1.IIamPolicySearchResult
    >
  ): void;
  searchAllIamPolicies(
    request: protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
    callback: PaginationCallback<
      protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
      | protos.google.cloud.asset.v1.ISearchAllIamPoliciesResponse
      | null
      | undefined,
      protos.google.cloud.asset.v1.IIamPolicySearchResult
    >
  ): void;
  /**
   * Searches all the IAM policies within the given accessible scope (e.g., a
   * project, a folder or an organization). Callers should have
   * cloud.assets.SearchAllIamPolicies permission upon the requested scope,
   * otherwise the request will be rejected.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.scope
   *   Required. A scope can be a project, a folder or an organization. The search
   *   is limited to the IAM policies within the `scope`.
   *
   *   The allowed values are:
   *
   *   * projects/{PROJECT_ID}
   *   * projects/{PROJECT_NUMBER}
   *   * folders/{FOLDER_NUMBER}
   *   * organizations/{ORGANIZATION_NUMBER}
   * @param {string} [request.query]
   *   Optional. The query statement. An empty query can be specified to search
   *   all the IAM policies within the given `scope`.
   *
   *   Examples:
   *
   *   * `policy : "amy@gmail.com"` to find Cloud IAM policy bindings that
   *     specify user "amy@gmail.com".
   *   * `policy : "roles/compute.admin"` to find Cloud IAM policy bindings that
   *     specify the Compute Admin role.
   *   * `policy.role.permissions : "storage.buckets.update"` to find Cloud IAM
   *     policy bindings that specify a role containing "storage.buckets.update"
   *     permission.
   *   * `resource : "organizations/123"` to find Cloud IAM policy bindings that
   *     are set on "organizations/123".
   *   * `(resource : ("organizations/123" OR "folders/1234") AND policy : "amy")`
   *     to find Cloud IAM policy bindings that are set on "organizations/123" or
   *     "folders/1234", and also specify user "amy".
   *
   *   See [how to construct a
   *   query](https://cloud.google.com/asset-inventory/docs/searching-iam-policies#how_to_construct_a_query)
   *   for more details.
   * @param {number} [request.pageSize]
   *   Optional. The page size for search result pagination. Page size is capped
   *   at 500 even if a larger value is given. If set to zero, server will pick an
   *   appropriate default. Returned results may be fewer than requested. When
   *   this happens, there could be more results as long as `next_page_token` is
   *   returned.
   * @param {string} [request.pageToken]
   *   Optional. If present, retrieve the next batch of results from the preceding
   *   call to this method. `page_token` must be the value of `next_page_token`
   *   from the previous response. The values of all other method parameters must
   *   be identical to those in the previous call.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [IamPolicySearchResult]{@link google.cloud.asset.v1.IamPolicySearchResult}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [IamPolicySearchResult]{@link google.cloud.asset.v1.IamPolicySearchResult} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [SearchAllIamPoliciesRequest]{@link google.cloud.asset.v1.SearchAllIamPoliciesRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [SearchAllIamPoliciesResponse]{@link google.cloud.asset.v1.SearchAllIamPoliciesResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  searchAllIamPolicies(
    request: protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
          | protos.google.cloud.asset.v1.ISearchAllIamPoliciesResponse
          | null
          | undefined,
          protos.google.cloud.asset.v1.IIamPolicySearchResult
        >,
    callback?: PaginationCallback<
      protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
      | protos.google.cloud.asset.v1.ISearchAllIamPoliciesResponse
      | null
      | undefined,
      protos.google.cloud.asset.v1.IIamPolicySearchResult
    >
  ): Promise<
    [
      protos.google.cloud.asset.v1.IIamPolicySearchResult[],
      protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest | null,
      protos.google.cloud.asset.v1.ISearchAllIamPoliciesResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      scope: request.scope || '',
    });
    this.initialize();
    return this.innerApiCalls.searchAllIamPolicies(request, options, callback);
  }

  /**
   * Equivalent to {@link searchAllIamPolicies}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link searchAllIamPolicies} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.scope
   *   Required. A scope can be a project, a folder or an organization. The search
   *   is limited to the IAM policies within the `scope`.
   *
   *   The allowed values are:
   *
   *   * projects/{PROJECT_ID}
   *   * projects/{PROJECT_NUMBER}
   *   * folders/{FOLDER_NUMBER}
   *   * organizations/{ORGANIZATION_NUMBER}
   * @param {string} [request.query]
   *   Optional. The query statement. An empty query can be specified to search
   *   all the IAM policies within the given `scope`.
   *
   *   Examples:
   *
   *   * `policy : "amy@gmail.com"` to find Cloud IAM policy bindings that
   *     specify user "amy@gmail.com".
   *   * `policy : "roles/compute.admin"` to find Cloud IAM policy bindings that
   *     specify the Compute Admin role.
   *   * `policy.role.permissions : "storage.buckets.update"` to find Cloud IAM
   *     policy bindings that specify a role containing "storage.buckets.update"
   *     permission.
   *   * `resource : "organizations/123"` to find Cloud IAM policy bindings that
   *     are set on "organizations/123".
   *   * `(resource : ("organizations/123" OR "folders/1234") AND policy : "amy")`
   *     to find Cloud IAM policy bindings that are set on "organizations/123" or
   *     "folders/1234", and also specify user "amy".
   *
   *   See [how to construct a
   *   query](https://cloud.google.com/asset-inventory/docs/searching-iam-policies#how_to_construct_a_query)
   *   for more details.
   * @param {number} [request.pageSize]
   *   Optional. The page size for search result pagination. Page size is capped
   *   at 500 even if a larger value is given. If set to zero, server will pick an
   *   appropriate default. Returned results may be fewer than requested. When
   *   this happens, there could be more results as long as `next_page_token` is
   *   returned.
   * @param {string} [request.pageToken]
   *   Optional. If present, retrieve the next batch of results from the preceding
   *   call to this method. `page_token` must be the value of `next_page_token`
   *   from the previous response. The values of all other method parameters must
   *   be identical to those in the previous call.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [IamPolicySearchResult]{@link google.cloud.asset.v1.IamPolicySearchResult} on 'data' event.
   */
  searchAllIamPoliciesStream(
    request?: protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      scope: request.scope || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.searchAllIamPolicies.createStream(
      this.innerApiCalls.searchAllIamPolicies as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link searchAllIamPolicies}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.scope
   *   Required. A scope can be a project, a folder or an organization. The search
   *   is limited to the IAM policies within the `scope`.
   *
   *   The allowed values are:
   *
   *   * projects/{PROJECT_ID}
   *   * projects/{PROJECT_NUMBER}
   *   * folders/{FOLDER_NUMBER}
   *   * organizations/{ORGANIZATION_NUMBER}
   * @param {string} [request.query]
   *   Optional. The query statement. An empty query can be specified to search
   *   all the IAM policies within the given `scope`.
   *
   *   Examples:
   *
   *   * `policy : "amy@gmail.com"` to find Cloud IAM policy bindings that
   *     specify user "amy@gmail.com".
   *   * `policy : "roles/compute.admin"` to find Cloud IAM policy bindings that
   *     specify the Compute Admin role.
   *   * `policy.role.permissions : "storage.buckets.update"` to find Cloud IAM
   *     policy bindings that specify a role containing "storage.buckets.update"
   *     permission.
   *   * `resource : "organizations/123"` to find Cloud IAM policy bindings that
   *     are set on "organizations/123".
   *   * `(resource : ("organizations/123" OR "folders/1234") AND policy : "amy")`
   *     to find Cloud IAM policy bindings that are set on "organizations/123" or
   *     "folders/1234", and also specify user "amy".
   *
   *   See [how to construct a
   *   query](https://cloud.google.com/asset-inventory/docs/searching-iam-policies#how_to_construct_a_query)
   *   for more details.
   * @param {number} [request.pageSize]
   *   Optional. The page size for search result pagination. Page size is capped
   *   at 500 even if a larger value is given. If set to zero, server will pick an
   *   appropriate default. Returned results may be fewer than requested. When
   *   this happens, there could be more results as long as `next_page_token` is
   *   returned.
   * @param {string} [request.pageToken]
   *   Optional. If present, retrieve the next batch of results from the preceding
   *   call to this method. `page_token` must be the value of `next_page_token`
   *   from the previous response. The values of all other method parameters must
   *   be identical to those in the previous call.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  searchAllIamPoliciesAsync(
    request?: protos.google.cloud.asset.v1.ISearchAllIamPoliciesRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.cloud.asset.v1.IIamPolicySearchResult> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      scope: request.scope || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.searchAllIamPolicies.asyncIterate(
      this.innerApiCalls['searchAllIamPolicies'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.asset.v1.IIamPolicySearchResult>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified folderFeed resource name string.
   *
   * @param {string} folder
   * @param {string} feed
   * @returns {string} Resource name string.
   */
  folderFeedPath(folder: string, feed: string) {
    return this.pathTemplates.folderFeedPathTemplate.render({
      folder: folder,
      feed: feed,
    });
  }

  /**
   * Parse the folder from FolderFeed resource.
   *
   * @param {string} folderFeedName
   *   A fully-qualified path representing folder_feed resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderFeedName(folderFeedName: string) {
    return this.pathTemplates.folderFeedPathTemplate.match(folderFeedName)
      .folder;
  }

  /**
   * Parse the feed from FolderFeed resource.
   *
   * @param {string} folderFeedName
   *   A fully-qualified path representing folder_feed resource.
   * @returns {string} A string representing the feed.
   */
  matchFeedFromFolderFeedName(folderFeedName: string) {
    return this.pathTemplates.folderFeedPathTemplate.match(folderFeedName).feed;
  }

  /**
   * Return a fully-qualified organizationFeed resource name string.
   *
   * @param {string} organization
   * @param {string} feed
   * @returns {string} Resource name string.
   */
  organizationFeedPath(organization: string, feed: string) {
    return this.pathTemplates.organizationFeedPathTemplate.render({
      organization: organization,
      feed: feed,
    });
  }

  /**
   * Parse the organization from OrganizationFeed resource.
   *
   * @param {string} organizationFeedName
   *   A fully-qualified path representing organization_feed resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationFeedName(organizationFeedName: string) {
    return this.pathTemplates.organizationFeedPathTemplate.match(
      organizationFeedName
    ).organization;
  }

  /**
   * Parse the feed from OrganizationFeed resource.
   *
   * @param {string} organizationFeedName
   *   A fully-qualified path representing organization_feed resource.
   * @returns {string} A string representing the feed.
   */
  matchFeedFromOrganizationFeedName(organizationFeedName: string) {
    return this.pathTemplates.organizationFeedPathTemplate.match(
      organizationFeedName
    ).feed;
  }

  /**
   * Return a fully-qualified projectFeed resource name string.
   *
   * @param {string} project
   * @param {string} feed
   * @returns {string} Resource name string.
   */
  projectFeedPath(project: string, feed: string) {
    return this.pathTemplates.projectFeedPathTemplate.render({
      project: project,
      feed: feed,
    });
  }

  /**
   * Parse the project from ProjectFeed resource.
   *
   * @param {string} projectFeedName
   *   A fully-qualified path representing project_feed resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectFeedName(projectFeedName: string) {
    return this.pathTemplates.projectFeedPathTemplate.match(projectFeedName)
      .project;
  }

  /**
   * Parse the feed from ProjectFeed resource.
   *
   * @param {string} projectFeedName
   *   A fully-qualified path representing project_feed resource.
   * @returns {string} A string representing the feed.
   */
  matchFeedFromProjectFeedName(projectFeedName: string) {
    return this.pathTemplates.projectFeedPathTemplate.match(projectFeedName)
      .feed;
  }

  /**
   * Terminate the GRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   */
  close(): Promise<void> {
    this.initialize();
    if (!this._terminated) {
      return this.assetServiceStub!.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
